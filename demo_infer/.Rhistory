ungroup() %>%
group_by(Pair_name) %>%
mutate(aic.w = MuMIn::Weights(aic)) %>% # recalculate weights without additional models interfering with selection
mutate_at(vars(aic.w), as.numeric) %>%
ungroup()
t.s.b.mod <- t.s.b.mod %>%
group_by(region, lin.pair, model, super_model) %>%
reframe(mean.aic = mean(aic.w),
median.aic = median(aic.w)) %>%
ungroup()
nc.w <-
ggplot(t.s.b.mod %>% filter(region=="NC")%>%
arrange((mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(lin.pair == "B" & region == "NC"),
#            aes(x=model, y=aic.w), alpha=0.25)+
theme_bw()+
xlab("")+
ylab("")+
# geom_hline(data=t.s.b.mod %>% filter(region=="NC"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
ylim(c(0,1))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
pa.w <-
ggplot(t.s.b.mod %>% filter(region=="PA") %>%
arrange((mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(lin.pair == "B" & region == "PA"),
#            aes(x=model, y=aic.w), alpha=0.25)+
theme_bw()+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"),
drop = FALSE)+
xlab("")+
ylab("AIC Weights")+
# geom_hline(data=t.s.b.mod %>% filter(region=="PA"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
ylim(c(0,1))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
va.w <-
ggplot(t.s.b.mod %>% filter(region=="VA") %>%
arrange((mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(lin.pair == "B" & region == "VA"),
#            aes(x=model, y=aic.w), alpha=0.25)+
theme_bw()+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"),
drop = FALSE)+
xlab("")+
ylab("")+
# geom_hline(data=t.s.b.mod %>% filter(region=="PA"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
ylim(c(0,1))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
# jpeg("./plots/aic_pop_80perc.jpeg", res=5e2, width=10, height=5, unit="in")
# ggarrange(pa.w,va.w,nc.w, ncol=3, common.legend = T, legend = "right")
# dev.off()
}
if (aic == T) {
t.s.b.mod <- subset(t.s.b, lin.pair =="B")
t.s.b.mod <- t.s.b.mod %>%
group_by(region, lin.pair, model, super_model) %>%
reframe(mean.aic = mean(aic),
mean.aicw = mean(aic.w),
median.aic = median(aic),
median.aicw = median(aic.w),
min.aic = min(aic),
max.aic = max(aic),
sd.aic = sd(aic)) %>%
ungroup()
nc <-
ggplot(t.s.b.mod %>% filter(region=="NC")%>%
arrange(desc(mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(region=="NC"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
xlab("")+
ylab("")+
geom_hline(data=t.s.b.mod %>% filter(region=="NC"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
pa <-
ggplot(t.s.b.mod %>% filter(region=="PA") %>%
arrange(desc(mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(region=="PA"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"),
drop = FALSE)+
xlab("")+
ylab("AIC")+
geom_hline(data=t.s.b.mod %>% filter(region=="PA"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
va <-
ggplot(t.s.b.mod %>% filter(region=="VA") %>%
arrange(desc(mean.aic)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.aic, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
geom_hline(data=t.s.b.mod %>% filter(region=="VA"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
# geom_point(data=t.s.b %>%
#              filter(region=="VA"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
xlab("Model")+
ylab("")+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
# jpeg("./plots/aic_pop_80perc.jpeg", res=5e2, width=10, height=5, unit="in")
# ggarrange(pa,va,nc, ncol=3, common.legend = T, legend = "right")
# dev.off()
}
if (model.score == T) {
t.s.b.mod <- subset(t.s.b, lin.pair =="B")
t.s.b.mod <- t.s.b.mod %>%
group_by(region, lin.pair, model, super_model) %>%
reframe(mean.ms = mean(model_score),
median.ms = median(model_score)) %>%
ungroup()
nc.ms <-
ggplot(t.s.b.mod %>% filter(region=="NC")%>%
arrange((mean.ms)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.ms, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(region=="NC"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
xlab("")+
ylab("")+
ylim(c(0,1))+
# geom_hline(data=t.s.b.mod %>% filter(region=="NC"), aes(yintercept = min(mean.ms)), color="red", linetype=2)+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
pa.ms <-
ggplot(t.s.b.mod %>% filter(region=="PA") %>%
arrange((mean.ms)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.ms, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_point(data=t.s.b %>%
#              filter(region=="PA"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"),
drop = FALSE)+
xlab("")+
ylab("Model Score")+
ylim(c(0,1))+
# geom_hline(data=t.s.b.mod %>% filter(region=="PA"), aes(yintercept = minX(mean.aic)+2), color="red", linetype=2)+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
va.ms <-
ggplot(t.s.b.mod %>% filter(region=="VA") %>%
arrange((mean.ms)) %>%
mutate(model = factor(model, levels = unique(model))) %>%
ungroup(),
aes(y=mean.ms, x=model, color=super_model))+
geom_point()+
stat_summary(fun = "mean", geom = "crossbar")+
# geom_hline(data=t.s.b.mod %>% filter(region=="VA"), aes(yintercept = min(mean.aic)+2), color="red", linetype=2)+
# geom_point(data=t.s.b %>%
#              filter(region=="VA"),
#            aes(x=model, y=aic, color=super_model), alpha=0.25)+
theme_bw()+
xlab("Model")+
ylab("")+
ylim(c(0,1))+
scale_color_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
facet_wrap(~ region, labeller = labeller(region = cz.labs, lin2=label_wrap_gen(width=10)))+
theme(text = element_text(size=size.t), axis.text=element_text(size=axes.size.t),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=axes.size.t), aspect.ratio = aspect)
# jpeg("./plots/aic_pop_80perc.jpeg", res=5e2, width=10, height=5, unit="in")
# ggarrange(pa,va,nc, ncol=3, common.legend = T, legend = "right")
# dev.off()
}
}
# if (meta == T) {
#   jpeg("./plots/comparison/meta65.jpeg", res=5e2, width=10, height=10, unit="in")
#   ggarrange(pa.w,va.w,nc.w, # AIC Weights models
#             pa,va,nc, # AIC models
#             pa.ms, va.ms, nc.ms,
#             ncol=3, nrow=3, common.legend = T, legend = "none")
#   dev.off()
# }
#
# if (meta == F) {
#   jpeg("./plots/comparison/pop65.jpeg", res=5e2, width=10, height=10, unit="in")
#   ggarrange(pa.w,va.w,nc.w, # AIC Weights models
#             pa,va,nc, # AIC models
#             pa.ms, va.ms, nc.ms,
#             ncol=3, nrow=3, common.legend = T, legend = "none")
#   dev.off()
# }
# MODEL DEMOGRAPHIC PARAMETERS
supp.labs <- c("NC"="Rear Edge",
"PA"="Leading Edge",
"VA"="Virginia")
# get the best model in each region
# for AIC: PA=NM_ae; NC=IM_ae; VA=AM_ae_br
# for AIC weights: PA=IM_ae; NC=AM_ae_b; VA=AM_b
aicw=T
if (meta == T) {
if (perc == 65) {
# AIC W == AIC for meta models
pa.sub <- t.s.b %>% filter(region == "PA" & model == "IM_ae" & lin.pair == "B")
nc.sub <- t.s.b %>% filter(region == "NC" & model == "IM_ae" & lin.pair == "B")
va.sub <- t.s.b %>% filter(region == "VA" & model == "IM_ae" & lin.pair == "B")
}
if (perc == 80) {
# AIC W == AIC for meta models
pa.sub <- t.s.b %>% filter(region == "PA" & model == "IM_ae" & lin.pair == "B")
nc.sub <- t.s.b %>% filter(region == "NC" & model == "IM_ae" & lin.pair == "B")
va.sub <- t.s.b %>% filter(region == "VA" & model == "IM_ae" & lin.pair == "B")
}
}
if (meta == F) {
if (perc == 65) {
pa.sub <- t.s.b %>% filter(region == "PA" & model == "IM_ae" & lin.pair == "B")
nc.sub <- t.s.b %>% filter(region == "NC" & model == "NM_ae_br" & lin.pair == "B")
va.sub <- t.s.b %>% filter(region == "VA" & model == "SC" & lin.pair == "B")
}
if (perc == 80) {
if (aicw==T) {
pa.sub <- t.s.b %>% filter(region == "PA" & model == "IM_ae" & lin.pair == "B")
nc.sub <- t.s.b %>% filter(region == "NC" & model == "IM_ae" & lin.pair == "B")
va.sub <- t.s.b %>% filter(region == "VA" & model == "AM_ae_br" & lin.pair == "B")
}
if (aicw==F) {
pa.sub <- t.s.b %>% filter(region == "PA" & model == "NM_ae" & lin.pair == "B")
nc.sub <- t.s.b %>% filter(region == "NC" & model == "IM_ae" & lin.pair == "B")
va.sub <- t.s.b %>% filter(region == "VA" & model == "AM_ae_br" & lin.pair == "B")
}
}
}
t.s.b.reg <- rbind(pa.sub, nc.sub, va.sub)
# Time of split between lineages
t.s.b.reg <- t.s.b.reg %>% mutate(Tsplit2 = if_else(is.na(Tmig)==T, Tsplit, Tmig+Tsplit)) # Tmig + Tsplit = the time of lineage divergence
mu.Ts <- mean(t.s.b.reg$Tsplit2)
t.s.b.reg <- t.s.b.reg %>%
mutate(Tsplit.rel = Tsplit2/mu.Ts)
if (meta == T) {
ggplot()+
geom_hline(yintercept = 1, linetype=2, color="gray50")+
geom_point(data=t.s.b.reg, aes(x=region, y=Tsplit.rel, color=region), size=4)+
theme_bw()+
# ylim(c(0,1))+
ylab("Time of Split")+
xlab("Contact Zone")+
theme(text = element_text(size = 20), legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
aspect.ratio = 1)
}
if (meta == F) {
tsplit.lm <- lm(Tsplit.rel ~ region, data=t.s.b.reg)
car::Anova(tsplit.lm, type=3)
lm.se <- effect("region", tsplit.lm) %>% as.data.frame()
lm.se <- lm.se %>%
mutate(region.name = case_when(region == "NC" ~ "Rear Edge",
region == "VA" ~ "Virginia",
region == "PA" ~ "Leading Edge"))
lm.se$region.name <- factor(lm.se$region.name, levels = c("Rear Edge", "Virginia", "Leading Edge"))
ggplot()+
geom_hline(yintercept = 1, linetype=2, color="gray50")+
geom_point(data=lm.se, aes(x=region.name, y=fit, color=region.name), size=4)+
geom_errorbar(data=lm.se, aes(x=region.name, ymin=(fit-se), ymax=(fit+se), color=region.name), width=0.2)+
theme_bw()+
# ylim(c(0,1))+
ylab("Time of Split")+
xlab("Contact Zone")+
theme(text = element_text(size = 20), legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"),
aspect.ratio = 1)
}
# ggplot(t.s.b, aes(x=super_model, y=Tsplit, fill=super_model))+
#   # geom_violin(width=0.5, alpha=0.4)+
#   geom_point(position = position_dodge2(width = 0.9, preserve = "single"))+
#   stat_summary(fun = "median", geom = "crossbar")+
#   theme_bw()+
#   xlab("between lineage comparisons")+
#   ylab("Tsplit")+
#   # ylim(c(0,5e6))+
#   scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
#                                           "SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
#   facet_wrap(~ region, labeller = labeller(region = supp.labs))+
#   theme(strip.text.x = element_text(size=size.t), axis.text=element_text(size=size.t),
#         panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#         plot.background = element_blank(), axis.line = element_line(colour = "black"),
#         legend.position = "none")
### MIGRATION
if (meta == F) {
nc.dat <- t.s.b.reg %>% filter(region=="NC")
t.test(nc.dat$mij, nc.dat$mji, paired=T, alternative = "greater")
va.dat <- t.s.b.reg %>% filter(region=="VA")
t.test(va.dat$mij, va.dat$mji, paired=T, alternative = "greater")
pa.dat <- t.s.b.reg %>% filter(region=="PA")
t.test(pa.dat$mij, pa.dat$mji, paired=T, alternative = "greater")
}
#mij between lineages
size.t.mig = 12
a <-
ggplot(data=t.s.b.reg, aes(x=region, y=mij, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9, preserve = "single"))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Migration i <- j")+
# ylim(c(0,2e-6))+
# ylim(c(0,2))+
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text = element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
# mji between lineages
b <-
ggplot(data=t.s.b.reg, aes(x=region, y=mji, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Migration j <- i")+
# ylim(c(0,2e-6))+
# ylim(c(0,2))+
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text= element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
#mig1 between lineages
c <-
ggplot(data=t.s.b.reg, aes(x=region, y=mig1, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9, preserve = "single"))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Number of Migrants i <- j")+
# ylim(c(0,1.25e-6))+
# ylim(c(0,5))+
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text = element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
# mji between lineages
d <-
ggplot(data=t.s.b.reg, aes(x=region, y=mig2, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Number of Migrants j <- i")+
# ylim(c(0,1.25e-6))+
# ylim(c(0,5))+
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text= element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
ggpubr::ggarrange(a,b,c,d, ncol=2, nrow=2, legend = "none")
perc
a <-
ggplot(data=t.s.b.reg, aes(x=region, y=mij, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9, preserve = "single"))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Migration i <- j")+
# ylim(c(0,2e-6))+ # meta=T & perc=80
ylim(c(0,6e-7))+ # meta=T & perc=65
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text = element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
# mji between lineages
b <-
ggplot(data=t.s.b.reg, aes(x=region, y=mji, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Migration j <- i")+
# ylim(c(0,2e-6))+ # meta=T & perc=80
ylim(c(0,6e-7))+ # meta=T & perc=65
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text= element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
#mig1 between lineages
c <-
ggplot(data=t.s.b.reg, aes(x=region, y=mig1, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9, preserve = "single"))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Number of Migrants i <- j")+
# ylim(c(0,5))+ # meta=T & perc=80
ylim(c(0,11))+ # meta=T & perc=65
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text = element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
# mji between lineages
d <-
ggplot(data=t.s.b.reg, aes(x=region, y=mig2, fill=super_model))+
geom_violin(width=0.5, alpha=0.4)+
geom_point(position = position_dodge2(width = 0.9))+
stat_summary(fun = "median", geom = "crossbar")+
theme_bw()+
xlab("between lineage comparisons")+
ylab("Number of Migrants j <- i")+
# ylim(c(0,5))+  # meta=T & perc=80
ylim(c(0,11))+ # meta=T & perc=65
scale_fill_manual("legend", values = c("NM" = "#00B81F", "SC" = "#00A5FF", "IM" = "firebrick2",
"SC2C" = "blue4", "IM2C" = "red4", "AM" = "orchid2", "A_SC" = "purple3"))+
# facet_wrap(~ region, labeller = labeller(region = supp.labs))+
theme(text= element_text(size=size.t.mig), axis.text=element_text(size=size.t.mig),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.background = element_blank(), axis.line = element_line(colour = "black"), legend.position = "none")
ggpubr::ggarrange(a,b,c,d, ncol=2, nrow=2, legend = "none")
